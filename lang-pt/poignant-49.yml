    - >
        "Eu não visito o meu planeta há muito tempo.  Seria difícil considerá-lo minha casa
        a esta altura do campeonato."


        "Bem, Warren Beatty é maravilhoso.  Sua personagem é basicamente socialmente aleijada.  Ele
        até tenta se matar, mas Dustin Hoffman senta no peitoril da janela e começa a chorar
        e cantar uma música totalmente hilária, é de partir o coração.  Eu tenho ele aqui,
        você devia assistí-lo."


        "Posso pegar algo para comer?" perguntou o Doutor.  E ainda se sentia sujo.


        "Que tal assistirmos um filme e você pode comer mantegocias com tentáculos?" disse a cabra.


        Então, rumaram de volta ao projetor da cabra.  Back by the freezer locker,
        they sat on a giant rug and broke off the appendages of frozen buttermelons.  A casca
        era dura, mas depois de quebrada, rico creme de frutas em abundância.  Doce ao paladar e
        de um aroma muito agradável.


        "Primeiro filme, que você tem que ver," disse a cabra.  "Filmado e produzido localmente.  Eu
        sou íntimo da moça que dirigiu o elenco.  Saí com ela por um tempo.  Sabia de todo
        que acontecia quem ia protagonizar diferentes papéis muito antes que fosse anunciado."


        A cabra ajeitou o projetor perto do Dr. Cham.  "A música tá em surround sound.
        Você pode operar o botão."


        !i/filmstrip-1.gif(The Originals and their lonesome planet.)!


        A mente do Dr. Cham vagou nesse ponto da apresentação, just as the land war
        mounted between the two throngs of animal settlers.  The details of their wars
        and campaigns continued to consume the spool of transparent film that Dr. Cham
        was feeding through the projector.  


        Guerra após guerra após guerra.  O Cerco do Elmer Lake.  A Última Estada de Newton P. Giraffe
        e Filhos.  A Invasão Canil da Pequena Núvem Abandonada.  Nenhum animal morreu nessas guerras. 
        Gerlamente um ataque consistia em ost often an attack consisted of bopping another
        animal on the head.  And they philipped each other s noses.  Mas, acredite em mim,
        aquilo era humilhante.


        Porca miséria.  As coisas podiam ter dado certo.


        h3. O Nascimento de um Objeto


        "Não se preocupe," disse a cabra, ansiosa pra dissuadir a atenção do Dr. Chams 
        de volta ao filme.  "As coisas _dão_ certo."


        No Ruby, o Objeto é o centro exato das todas as coisas.  Ele é O Original.


        <pre>
         class UrsoTostado < Object; end
        </pre>


        O menor que indica *herança*.  Isto significa que a nova classe @UrsoTostado@
        é um nova classe baseada na classe @Objeto@.  Todo método que @Objeto@ tem vai estar
        disponível na @UrsoTostado@.  Constantes disponíveis em @Objeto@ vão estar disponíveis em
        @UrsoTostado@.


        Mas todo objeto é herdeiro de @Object@.  O código...


        <pre>
         class UrsoTostado; end
        </pre>


        É idêntico a...


        <pre>
         class UrsoTostado < Object; end
        </pre>


        Herança é útil.  Você pode criar espécies de objetos que se relacionam entre si.
        Quase sempre, quando você está dissecando um problema, você vai se deparar com vários objetos que
        compartilham atributos.  Você pode ter menos trabalho herdando de classes que já solucionam
        parte desse problema.


        Você pode ter uma classe @BrasilEndereco@ que guarda o endereço, cidade, estado,
        e cep de alguém que more no Brasil.  Quando você começar a guardar endereços
        da Inglaterra, você pode adicionar uma classe @ReinoUnidoEnderecos@.  Se você então
        garantir que os dois endereços herdem de uma classe mãe @Endereco@, você pode
        planejar seu software de correspondência de modo que aceite todo tipo de endereço.


        <pre>
         def envie_a_eles_um_kit( endereco )
           unless endereco.is_a? Endereco
             raise ArgumentError, "Objeto Endereco não encontrado."
           end
           print endereco.formatted
         end
        </pre>
 

        Além disso, herança é ótimo se você quer sobreescrever certos comportamentos numa classe.
        Por exemplo, talvez você queira fazer a sua própria variação da classe @Array@.
        Você quer melhorar o método @join@.  Mas se você mudar @Array#join@ diretamente, você
        vai afetar outras classes no Ruby que usam Arrays.


        Então você começa sua própria classe chamada @MeuArray@, que é baseada na classe @Array@ original.
        

        <pre>
         class MeuArray < Array
           # Contruir uma string neste array, formatando cada entrada
           # e depois as unindo.
           def join( sep = $,, format = "%s" )
             collect do |item|
               sprintf( format, item )
             end.join( sep )
           end
         end
        </pre>


        @MeuArray@ é agora uma classe @Array@ customizada com o seu próprio método @join@.  @Array@ é
        a *superclass (classe-superior, classe-mãe)* do @MeuArray@.  Cada objeto tem um método @superclass@ 
        onde você pode verificar esta relação.


        <pre>
         irb> MinhaArray.superclass
           => Array
        </pre>


        Perfeito.  Nós administramos um hotel e nós temos uma @Array@ dos tamanhos dos nossos quarots: @[3, 4, 6]@.
        Vamos imprimir isso de um jeito bacana pra encadenarmos.


        <pre>
         quartos = MinhaArray[3, 4, 6]
         print "Nós temos quartos de " + quartos.join( ", ", "%d camas" ) + " disponíveis."
        </pre>


        Que imprime, "Nós temos quartos de 3 camas, 4 camas, 6 camas disponíveis."


        Dr. Cham estava procurando por um banheiro, mas só tinham videotapes pra todo lado.
        Ele acabou encontrando um lugar, que poderia ser um banheiro.  Tinha um vaso de metal.
        Mas mais importante, era escuro e escondido.
        

        Enquanto ele está lá, deixe-me dizer que enquanto Os Originais massacraram Os Invasores
        para provar seus diretois como Criaturas de Primeiro Escalão, o Objeto Ruby Object não 
        disputou nada. Ele é rei absoluto, Objeto o Primeiro.


        Observe.


        <pre>
         irb> Class.superclass
           => Module
         irb> Kernel.class
           => Module
         irb> Module.superclass
           => Object
         irb> Object.superclass
           => nil
        </pre>


        Até @Classe@ é um @Objeto@!  Veja, mesmo as classes sendo linguagem de definição para objetos,
        nós ainda podemos chamar métodos de classe nelas e tratá-los como objetos ocasionalmente.  
        Pode parecer um círculo confuso, but it s truly a very strict parentage.  E garante que quando você
        altera o @Object@, você altera *tudo no Ruby*.  O que é impossivelmente assustador e todo-poderoso
        e cataclísmico e incrível!  *Ruby não te restringe, minha irmã, meu irmão!* 


        Entre @Class@ e @Object@, você vê @Module@?  Se @Object@ é o rei, o pai de todas
        as outras partes do Ruby, então @Module@ é uma pobre e raquítica freira, abrigando
        e protengendo todos as suas pequeninas crianças camponesas.  (Pra completar a analogia:
        @Class@ é a professora da escola da vila e @Kernel@ é o auto-proclamado importante coronel.)


        O motivo da existência do @Module@ é dar comida e abrigo a código.  Métodos
        podem ficar abrigados embaixo da manta do @Module@.  @Module@ pode conter classes, 
        constantes e variáveis de qualquer tipo.


        "Mas o que um Module _faz_?" você pergunta.  "Como ele é lucrativamente utilizado??"


        "Isso é tudo que ele faz!!" Eu replico, mostrando as palmas da mão na maior expressão
        de futilidade conhecida pelo homem.  "Agora me escute -- pois não me repetirei -- essa 
        Mãe Módulo Superior deu a estes pobres objetos um lugar pra morar!!"


        <pre>
         # Veja, aqui está o module -- onde mais seu código poderia estar?
         module AtenciosaSantaInes

           # Uma CONSTANTE repousa perto da porta.  Ótimo.
           HOMEM_DESDENTADO_COM_GARFO = ['homem', 'garfo', 'exposed gums']

           # Uma Class está comendo, vivendo bem na cozinha.
           class CriancaGordaDeCera; end

           # Um Método está se escondendo lá atrás no armário banana, Deus sabe porquê.
           def timida_garota_com_cara_de_raposa; {'favor' => 'eu quero uma bolota de carvalho por favor'}; end

         end
        </pre>
           
           
        Agora você tem que ir pela Santa Inês para achá-los.


        <pre>
         >> AtenciosaSantaInes::HOMEM_DESDENTADO_COM_GARFO
         => ["homem", "garfo", "exposed gums"]
         >> AtenciosaSantaInes::CriancaGordaDeCera.new
         => #<AtenciosaSantaInes::FatWaxyChild:0xb7d2ad78>
         >> AtenciosaSantaInes::instance_methods
         => ["timida_garota_com_cara_de_raposa"]
        </pre>


        Lembre-se sempre que um @Module@ é somente um hotel.  Um teto sob as cabeças deles.  Ele não é uma
        auto-consciente @Classe@ e,  portanto, não pode ser trazida à vida com @new@.


        <pre>
         >> AtenciosaSantaInes.new
         NoMethodError: undefined method `new' for AtenciosaSantaInes:Module
                 from (irb):2
        </pre>


        Santa Inês deu a própria vida pra cuidar desses pedaços de código desesperados.
        Por favor.  Não tire isso dela.


        Se, todavia, você quer roubar da Santa Inês, eu posso te ajudar.
        Você pode arrumar um grande mosteiro pra engrupir o ministério da @AtenciosaSantaInes@ e daí
        o quê sobrará pra ela?


        Para isso você pode usar @extend@, que vai puxar todos os métodos do módulo pra dentro de uma classe ou um objeto.


        <pre>
         >> class FundacaoDeAmorEAmparoTimeWarnerAolCitibank; end
         >> FundacaoDeAmorEAmparoTimeWarnerAolCitibank.extend AtenciosaSantaInes
         >> FundacaoDeAmorEAmparoTimeWarnerAolCitibank::instance_methods
         => ["timida_garota_com_cara_de_raposa"]
        </pre>


        Na verdade, ninguém _roubou_ da @AtenciosaSantaInes@, somente pegaram emprestado.
        A @timida_garota_com_cara_de_raposa@ agora tem dois endereços.


        Você deve admitir.  O velho mosteiro pode ser comprado um zilhão de vezes e a pequena garota-com-cara-de-raposa
        _ainda_ estará nos fundos no armário banana esperando uma bolota de carvalho!  Que pena que não podemos alimentá-la.
        Ela é um método sem argumentos.


        When Dr. Cham came out refreshed, the filmstrip was a bit behind.  Mas a cabra não notou,
        então o Doutor avançou alguns quadros até fazer algum sentido.


        !i/filmstrip-2.gif(The goats that told a planet it was ugly.)!


        Então os invasores deixaram o planeta.


        "Este planeta _é_ decrépito," disse o Dr. Cham.  "O castelo é bacana.  Mas por dentro
        é um desastre."


        "O castelo parece uma projeção," disse a cabra.  "Todas as flores
        e brotos de maçã e até mesmo o céu.  É uma projeção de baixa resolução."


        "Sim?  Ele é encantador."


        "Eu acho."


        !i/filmstrip-3.gif(The spool ends.)!


        "Tá tudo errado!" disse a cabra.  "Não é assim que o filme termina!
        Não teve sangue!  O que aconteceu?  O que aconteceu?  Você apertou o botão errado, idiota?"


        "Bem, eu não sei," disse o Dr. Cham.  Ele girou o botão pra frente e pra trás.
        Tapped the lens.


        "Cheque a fita!  Cheque a fita!"


        Dr. Cham tirou um pedaço do filme do alimentador do projetor, derretido e pingando
        nas pontas.


        "Maldição!  Estes projetores são de qualidade!  Nunca vi isso acontecer.  Não pode ser."


        h3. Caçando Por uma Voz


        "Eu não acho que tenha sido o projetor," disse o Dr. Cham.  "Alguma coisa vôou pela tela
        e proferiu and uttered a blistering moan."


        "Eu não tenho nenhuma cópia deste filme," disse melancólicamente a cabra.  "E aquela garota.  A diretora
        de elenco.  Eu nunca mais a verei novamente."


        Dr. Cham stood up and looked over the dumpy aisles of magnetic carnage, searching.


        "Oh, ei, você deveria chamar aquela garota," a cabra continuou. "Você poderia conversar com ela, chegar
        a um consenso.  Diga a ela sobre mim.  Não aja como se fosse meu amigo, só, você sabe, 'Oh, aquele cara?
        Eh, que bobalhão.'"


        Dr. Cham mirou a porta e saiu.


        Os corredores eram todo um outro mundo bagunçado.  Nos arquivos da cabra, as prateleiras estavam 
        reviradas. No corredor, tudo fora do lugar.  Pias caíam pelo teto.  
        O Doutor se aventurou por baixo dos escombros, chutando compensados de madeira quando necessário.


        "Você não deveria estar aqui fora," disse a cabra.  "Você está na propriedade de outra pessoa aqui.
        Um casal de elefantes pigmeus são donos disso tudo.  Eles são sujeitos maus.  Vão te dar uma surra
        com seus corpanzis.  They ball it up and just whack ya."


        Dr. Cham tirou um arquivo do seu caminho, que vazou a fina parede, e então o chão
        do cômodo ao lado.  E eles o ouviram caindo por vários andares depois.


        "Eu estou tentando lembrar como isso acontece no livro," disse o Dr. Cham, as he walked swiftly through
        the hall.  "That milky fog that swept
        across the projection.  We find that thing."  Ele tentou uma maçaneta, ela se quebrou. Forged
        through the doorway and disappeared inside.


        "Você tem o dom de destruir as coisas com um chute, não tem?" disse a cabra.  "Paredes, portas."
        A cabra chifrou a parede The goat headbutted a wall.  The wall shuddered and then laid still.


        Então, tudo ficou calado.  E escuro.


        A cabra ficou firme no sombrio corredor, esperando Dr. Cham revirar algumas mesas e emergir,
        pronto pra continuar a partir do cômodo que ele estava.  Mas o Dr. Cham não voltou, e a cabra optou
        por compartilhar um momento com os destroços negligenciados pelo seus vizinhos.  Not that he could see at all.
        He could only hear the occassional rustling of the piles of invoices and carbon copy masters and
        manila envelopes when he shifted his legs.


        The ground seemed to buckling right under the goat, as if the heaps of kipple around him were
        beginning to slide toward his weight.  He would be at the center of this whirlpool of elephant
        documentation.  Would he die of papercuts first?  Or would he suffocate under the solid burial
        by office supplies?


        Um luz suave, no entenado, crept up to him.  Um luz prateada, flutuante.  No, it was a -- was it scissors?
        The scissors grew into a shimmering cluster of intellegent bread, each slice choking on glitter.
        But, no, it was hands.  E um chápeu de Páscoa.


        !i/hannah-1.gif(The goat alone in the hallway, meets an apparition.)!


        Em outro cômodo, Dr. Cham stood under the clear glass silently.  The ceiling had abruptly
        gone transparent, then starlight washed over his pants and jacket.  He walked further to
        the room's center in muted colors, lit as softly as an ancient manuscript in its own box at
        the museum.  More stars, more cotton clusters of fire, unveiled as he came across the floor.
        And it peeked into view soon enough, he expected it to be larger, but it wasn't.


        Terra.  Como um ovo colorido, ainda fresco.  Ele sentiu longas cordasHe felt long cello strings sing right up
        against his spine.  How could that be called Peoplemud?  Here was a vibrant and grassy
        lightbulb.  The one big ball that had something going for it.


        Ele pensou nas Chacretes.  Realmente, ele sentia saudade das Chacretes.  Que boas dançarinas
        elas eram.  Ele chegou a gritar algo pras Chacretes quando as viu.  Algo muito observador
        e lisonjeiro.


        Oh, sim, enquanto As Chacretes giravam, braço com braço, ele gritara, "Círculos Concêntricos!"
        Ninguém prestou atenção. 
        

        E esse pensamento foi o bastante pra alimentar o complexo de superioridade do Dr. Cham.  He wore a goofy
        smile as he retraced his footsteps.  He truthfully felt his genius coming through in
        such a statement.  To realize the simplicity of a circle was his.  Ele refletiu sobre isso
        por todo o caminho de volta ao corredor.


        O que eu acho ótimo.  Adore-se quando você tiver algum tempo.

 
        !i/hannah-2.gif(O Doutor conehce esse fantasma.)!


        "Oh, certo," disse a cabra.  "Sua sobrinha.  A sobrinha que você matou.  Eu estou com você agora."


        Por alguns momentos, eles ficaram se entreolhando.  Tempo bastante
        pra que ambos o Dr. Cham e a cabra pensássem: _Oh, sim.  Hannah
        nos causa muitos aborrecimentos.  Ela já está falando sobre donuts de bordo._


        "Ela começa falando sobre donuts de bordo na lata assim?" perguntou a cabra.


        "Sim, ela faz isso," disse o Doutor.  "She brings it up to you, then
        she brings it up to me.  She sees a maple donut somewhere -- I don't
        quite remember where."


        "Eu to vendo um donut de bordo de verdade?" Hannah disse.  "Eu preciso de um de verdade."


        "Okay, okay," disse a cabra.  "Sim, eu lembro: agora é a parte que ela diz
        que se ela conseguir um donut de bordo de verdade, ela será uma pessoa real novamente.
        Porque o real destino dela era de ter uma padaria e você arruinou esse destino
        e agora ela está condenada a ser um fantasma."


        "Hey, isso é verdade!" Hannah glped.


        "It's terrible that we must bear through this whole scene again," said
        the Doctor.  "The donuts are immaterial.  They should be left out altogether."


        "Cara, eu to tendo _problemas_ pra lembrar tudo desse capítulo," disse a cabra.
        "Eu nem me lembro como sair desse corredor.  I must
        have read that book like thirty times.  Do we blast through a wall?   Do
        we scream until someone finds us?"


        "We get Hannah to float through walls and she finds some kind of machine,"
        says Dr. Cham.  "I have to write a program -- it all works out somehow."


        "But, you know what I'm saying?" said the goat.  "I forget all the details.
        Especially the earlier chapters.  I mean I can remember the ending perfectly.
        It's hard to sit through all this.  The end is so much better."


        Dr. Cham folded his arms and teetered on a heel.  "The porcupine."  He
        smiled greedily at the goat.


        "Oh, com certeza. O porco-espinho é definitivamente quem eu quero conhecer," disse a
        cabra.  "Eu me perguntou o quê ele faz com todo aquele dinheiro depois que o livro terminar."


        Dr. Cham acenou respeitosamente.  "I'm very excited to see him wearing slippers."


        "Those infernal slippers!" said the goat and he haw-hawed coarsely, a shower
        of saliva cascading from his jaws.


        Hannah's mind rattled, waiting for this nonsense to break for a moment.
        She tipped her head on its side and the rattle slid along the curve of
        her cranium.  The little noise died away, though, as the back of her head
        vanished (_fluxed out_ is what she called it) and then her head was  
        back again with its little rattle and she caught herself doing that
        careless moaning again.  *HRRRRRR-RRR-OH-RRRR-RRRR.*


        "Eu não to nessa coisa de bacon pedaçudo" disse a cabr.  "Não vejo o quê
        é tão legal nisso."


        Ela podia falar enquanto gemia? *BON-BON.*  Com um sotaque francês.  *BOHN-BOHN.
        BOHN-APPE-TEET-OHHHH-RRRR.*


        "I know she's harmless, but that sound freaks me out.  My hair is
        *completely* on end."


        "Hannah?" disse o Dr. Cham.  "Onde você está, criança?  Come do a good turn
        for us, my niece."


        She was right near them, in and out.  And they could hear her
        cleaning up her voice, bright, speaking like a angel scattering stardust.
        Yes, the whole maple donut story came out again, and more about the
        bakery she would own, the muffins and rolls and baguettes.


